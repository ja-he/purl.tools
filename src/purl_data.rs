pub const PURL_TYPES: &[(&str, PurlTypeStatus)] = &[
    ("alpm", PurlTypeStatus::WellKnown),
    ("android", PurlTypeStatus::Proposed),
    ("apache", PurlTypeStatus::Proposed),
    ("apk", PurlTypeStatus::WellKnown),
    ("atom", PurlTypeStatus::Proposed),
    ("bitbucket", PurlTypeStatus::WellKnown),
    ("bitnami", PurlTypeStatus::WellKnown),
    ("bower", PurlTypeStatus::Proposed),
    ("brew", PurlTypeStatus::Proposed),
    ("buildroot", PurlTypeStatus::Proposed),
    ("cargo", PurlTypeStatus::WellKnown),
    ("carthage", PurlTypeStatus::Proposed),
    ("chef", PurlTypeStatus::Proposed),
    ("chocolatey", PurlTypeStatus::Proposed),
    ("clojars", PurlTypeStatus::Proposed),
    ("cocoapods", PurlTypeStatus::WellKnown),
    ("composer", PurlTypeStatus::WellKnown),
    ("conan", PurlTypeStatus::WellKnown),
    ("conda", PurlTypeStatus::WellKnown),
    ("coreos", PurlTypeStatus::Proposed),
    ("cpan", PurlTypeStatus::Proposed),
    ("cran", PurlTypeStatus::WellKnown),
    ("crystal", PurlTypeStatus::Proposed),
    ("ctan", PurlTypeStatus::Proposed),
    ("deb", PurlTypeStatus::WellKnown),
    ("docker", PurlTypeStatus::WellKnown),
    ("drupal", PurlTypeStatus::Proposed),
    ("dtype", PurlTypeStatus::Proposed),
    ("dub", PurlTypeStatus::Proposed),
    ("ebuild", PurlTypeStatus::Proposed),
    ("eclipse", PurlTypeStatus::Proposed),
    ("elm", PurlTypeStatus::Proposed),
    ("gem", PurlTypeStatus::WellKnown),
    ("generic", PurlTypeStatus::WellKnown),
    ("gitea", PurlTypeStatus::Proposed),
    ("github", PurlTypeStatus::WellKnown),
    ("gitlab", PurlTypeStatus::Proposed),
    ("golang", PurlTypeStatus::WellKnown),
    ("gradle", PurlTypeStatus::Proposed),
    ("guix", PurlTypeStatus::Proposed),
    ("hackage", PurlTypeStatus::WellKnown),
    ("haxe", PurlTypeStatus::Proposed),
    ("helm", PurlTypeStatus::Proposed),
    ("hex", PurlTypeStatus::WellKnown),
    ("huggingface", PurlTypeStatus::WellKnown),
    ("julia", PurlTypeStatus::Proposed),
    ("lua", PurlTypeStatus::Proposed),
    ("maven", PurlTypeStatus::WellKnown),
    ("melpa", PurlTypeStatus::Proposed),
    ("meteor", PurlTypeStatus::Proposed),
    ("mlflow", PurlTypeStatus::WellKnown),
    ("nim", PurlTypeStatus::Proposed),
    ("nix", PurlTypeStatus::Proposed),
    ("npm", PurlTypeStatus::WellKnown),
    ("nuget", PurlTypeStatus::WellKnown),
    ("oci", PurlTypeStatus::WellKnown),
    ("opam", PurlTypeStatus::Proposed),
    ("openwrt", PurlTypeStatus::Proposed),
    ("osgi", PurlTypeStatus::Proposed),
    ("p2", PurlTypeStatus::Proposed),
    ("pear", PurlTypeStatus::Proposed),
    ("pecl", PurlTypeStatus::Proposed),
    ("perl6", PurlTypeStatus::Proposed),
    ("platformio", PurlTypeStatus::Proposed),
    ("pub", PurlTypeStatus::WellKnown),
    ("puppet", PurlTypeStatus::Proposed),
    ("pypi", PurlTypeStatus::WellKnown),
    ("qpkg", PurlTypeStatus::WellKnown),
    ("rpm", PurlTypeStatus::WellKnown),
    ("sourceforge", PurlTypeStatus::Proposed),
    ("sublime", PurlTypeStatus::Proposed),
    ("swid", PurlTypeStatus::WellKnown),
    ("swift", PurlTypeStatus::WellKnown),
    ("terraform", PurlTypeStatus::Proposed),
    ("vagrant", PurlTypeStatus::Proposed),
    ("vim", PurlTypeStatus::Proposed),
    ("wordpress", PurlTypeStatus::Proposed),
    ("yocto", PurlTypeStatus::Proposed),
];

#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum PurlTypeStatus {
    WellKnown,
    Proposed,
    Other,
}

pub fn get_purl_type_status(typestr: &str) -> PurlTypeStatus {
    if let Some(found) = PURL_TYPES.iter().find(|(t, _)| *t == typestr) {
        found.1
    } else {
        PurlTypeStatus::Other
    }
}
